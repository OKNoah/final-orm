// Generated by CoffeeScript 1.10.0
var DOM, If, Tree,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Tree = require('ui-js/core/tree');

DOM = require('ui-js/dom');

module.exports = If = (function() {
  If.attribute = 'if';

  If.priority = 600;

  If.terminal = true;

  If.compile = function(template, tree) {
    var comment, exp, subTree;
    comment = DOM.createComment(' *if ');
    tree.replace(comment);
    exp = template.attr('*if');
    template.removeAttr('*if');
    subTree = tree.create(template);
    return [subTree, exp];
  };

  function If(label, component, locals, subThree, exp) {
    this.label = label;
    this.component = component;
    this.locals = locals;
    this.subThree = subThree;
    this.changeState = bind(this.changeState, this);
    this.node = null;
    ui.watch(this.component, exp, this.changeState, this.locals);
    return;
  }

  If.prototype.destructor = function() {
    this.destroy();
  };

  If.prototype.changeState = function(state) {
    if (state) {
      this.create();
    } else {
      this.destroy();
    }
  };

  If.prototype.create = function() {
    if (this.node) {
      return;
    }
    this.node = this.subThree.template.clone();
    this.label.after(this.node);
    this.subThree.init(this.node, this.component, this.locals);
  };

  If.prototype.destroy = function() {
    if (!this.node) {
      return;
    }
    this.node.destroy(true, true);
    this.node = null;
  };

  return If;

})();

//# sourceMappingURL=if.js.map
