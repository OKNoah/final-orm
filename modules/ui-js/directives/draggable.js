// Generated by CoffeeScript 1.10.0
var Draggable,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

module.exports = Draggable = (function() {
  Draggable.attribute = 'draggable';

  function Draggable(node) {
    this.node = node;
    this.onMouseMove = bind(this.onMouseMove, this);
    this.onMouseUp = bind(this.onMouseUp, this);
    this.onMouseDown = bind(this.onMouseDown, this);
    this.startX = 0;
    this.startY = 0;
    this.lastX = 0;
    this.lastY = 0;
    this.state = false;
    this.initHandlers();
    return;
  }

  Draggable.prototype.initHandlers = function() {
    this.node.on('mousedown', this.onMouseDown);
    ui.dom.on('mouseup', this.onMouseUp);
    ui.dom.on('mousemove', this.onMouseMove);
  };

  Draggable.prototype.onMouseDown = function(event) {
    this.state = true;
    this.startX = event.clientX;
    this.startY = event.clientY;
    this.lastX = 0;
    this.lastY = 0;
    this.node.emit('dragstart');
    event.prevent();
  };

  Draggable.prototype.onMouseUp = function(event) {
    this.state = false;
    this.node.emit('dragend');
    this.node.emit('dragstop');
  };

  Draggable.prototype.onMouseMove = function(event) {
    var moveX, moveY, x, y;
    if (!this.state) {
      return;
    }
    x = event.clientX - this.startX;
    y = event.clientY - this.startY;
    moveX = x - this.lastX;
    moveY = y - this.lastY;
    this.lastX = x;
    this.lastY = y;
    this.node.emit('drag', {
      x: x,
      y: y,
      moveX: moveX,
      moveY: moveY
    });
  };

  return Draggable;

})();

//# sourceMappingURL=draggable.js.map
