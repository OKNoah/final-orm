// Generated by CoffeeScript 1.10.0
var callback, clearImmediate, fastApply, firstCall, immediate, message, setImmediate, slice, storage, uid;

fastApply = function(args) {
  var func;
  func = args[0];
  switch (args.length) {
    case 1:
      return func();
    case 2:
      return func(args[1]);
    case 3:
      return func(args[1], args[2]);
  }
  return func.apply(window, slice.call(args, 1));
};

callback = function(event) {
  var data, key;
  key = event.data;
  data = void 0;
  if (typeof key === 'string' && key.indexOf(message) === 0) {
    data = storage[key];
    if (data) {
      delete storage[key];
      fastApply(data);
    }
  }
};

uid = 0;

storage = {};

firstCall = true;

slice = Array.prototype.slice;

message = 'setImmediatePolyfillMessage';

setImmediate = function() {
  var args, i, id, key;
  id = uid++;
  key = message + id;
  i = arguments.length;
  args = new Array(i);
  while (i--) {
    args[i] = arguments[i];
  }
  storage[key] = args;
  if (firstCall) {
    firstCall = false;
    window.addEventListener('message', callback);
  }
  window.postMessage(key, '*');
  return id;
};

clearImmediate = function(id) {
  delete storage[message + id];
};

immediate = function(handler) {
  return setImmediate(handler);
};

immediate.stop = function(id) {
  return clearImmediate(id);
};

module.exports = immediate;

//# sourceMappingURL=immediate.js.map
