// Generated by CoffeeScript 1.10.0
var Keyboard,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

module.exports = new (Keyboard = (function() {
  Keyboard.prototype.ALIASES = {
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESC: 27,
    TAB: 9,
    SPACE: 32,
    UP: 38,
    DOWN: 40,
    LEFT: 37,
    RIGHT: 39,
    DEL: 46,
    DELETE: 46,
    HOME: 36,
    END: 35,
    PAGEUP: 33,
    PAGEDOWN: 34
  };

  function Keyboard() {
    this.onKeyUp = bind(this.onKeyUp, this);
    this.onKeyDown = bind(this.onKeyDown, this);
    this.pushedKeys = {};
    this.handlers = [];
    window.addEventListener('keydown', this.onKeyDown);
    window.addEventListener('keyup', this.onKeyUp);
    return;
  }

  Keyboard.prototype.onKeyDown = function(event) {
    var keyCode;
    keyCode = event.keyCode;
    this.pushedKeys[keyCode] = true;
    this.trigger();
  };

  Keyboard.prototype.onKeyUp = function(event) {
    var keyCode;
    keyCode = event.keyCode;
    delete this.pushedKeys[keyCode];
  };

  Keyboard.prototype.trigger = function() {
    var allMatch, callback, handler, i, keys, len, ref;
    ref = this.handlers;
    for (i = 0, len = ref.length; i < len; i++) {
      handler = ref[i];
      keys = handler.keys;
      callback = handler.callback;
      allMatch = keys.every((function(_this) {
        return function(key) {
          return _this.pushedKeys[key];
        };
      })(this));
      if (allMatch) {
        callback();
      }
    }
  };

  Keyboard.prototype.on = function(pattern, callback) {
    var compo, i, keys, len, match, ref;
    ref = pattern.toUpperCase().split(',');
    for (i = 0, len = ref.length; i < len; i++) {
      compo = ref[i];
      match = compo.match(/\w+/img);
      keys = match.map((function(_this) {
        return function(key) {
          var ref1;
          return (ref1 = _this.ALIASES[key]) != null ? ref1 : key.charCodeAt();
        };
      })(this));
      this.handlers.push({
        keys: keys,
        callback: callback
      });
    }
  };

  return Keyboard;

})());

//# sourceMappingURL=keyboard.js.map
