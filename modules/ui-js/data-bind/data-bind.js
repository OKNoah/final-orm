// Generated by CoffeeScript 1.10.0
var DataBind, Exp, ExpObserver;

ExpObserver = require('./exp-observer');

Exp = require('./exp');

module.exports = DataBind = (function() {
  function DataBind(objL, expL, objR, expR, scope) {
    var ref, value;
    this.destroyed = false;
    expL = new Exp(expL);
    expR = new Exp(expR);
    if (!expL.set) {
      throw Error('Invalid left-hand expression in DataBind');
    }
    value = (ref = expR(objR, scope)) != null ? ref : expL(objL, scope);
    expL.set(objL, value);
    if (typeof expR.set === "function") {
      expR.set(objR, value, scope);
    }
    this.observerR = new ExpObserver(objR, expR, function(value) {
      return expL.set(objL, value);
    }, scope);
    this.observerL = new ExpObserver(objL, expL, function(value) {
      if (expR.set) {
        return expR.set(objR, value, scope);
      } else {
        value = expR(objR);
        return expL.set(objL, value);
      }
    });
    return;
  }

  DataBind.prototype.destroy = function() {
    var ref, ref1;
    if (this.destroyed) {
      return;
    }
    if ((ref = this.observerL) != null) {
      ref.destroy();
    }
    if ((ref1 = this.observerR) != null) {
      ref1.destroy();
    }
    this.destroyed = true;
  };

  return DataBind;

})();

//# sourceMappingURL=data-bind.js.map
