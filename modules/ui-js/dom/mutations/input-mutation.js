// Generated by CoffeeScript 1.10.0
var ElementMutation, InputMutation,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ElementMutation = require('./element-mutation');

module.exports = InputMutation = (function(superClass) {
  extend(InputMutation, superClass);

  function InputMutation() {
    InputMutation.__super__.constructor.apply(this, arguments);
    this.valueChanged = false;
    this.wasReset = false;
    return;
  }

  InputMutation.prototype.changeValue = function() {
    this.valueChanged = true;
    this.wasReset = false;
  };

  InputMutation.prototype.needReset = function() {
    this.wasReset = true;
    this.valueChanged = false;
  };

  return InputMutation;

})(ElementMutation);

//# sourceMappingURL=input-mutation.js.map
