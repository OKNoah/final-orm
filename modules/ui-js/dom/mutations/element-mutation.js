// Generated by CoffeeScript 1.10.0
var ElementMutation, NodeMutation,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

NodeMutation = require('./node-mutation');

module.exports = ElementMutation = (function(superClass) {
  extend(ElementMutation, superClass);

  function ElementMutation() {
    ElementMutation.__super__.constructor.apply(this, arguments);
    this.changedAttrs = new Set();
    this.changedStyles = new Set();
    this.removedAttrs = new Set();
    return;
  }

  ElementMutation.prototype.changeStyle = function(name) {
    this.changedStyles.add(name);
  };

  ElementMutation.prototype.changeAttribute = function(name) {
    this.changedAttrs.add(name);
    this.removedAttrs["delete"](name);
  };

  ElementMutation.prototype.removeAttribute = function(name) {
    this.changedAttrs["delete"](name);
    this.removedAttrs.add(name);
  };

  return ElementMutation;

})(NodeMutation);

//# sourceMappingURL=element-mutation.js.map
