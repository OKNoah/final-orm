// Generated by CoffeeScript 1.10.0
var Element, Img,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Element = require('./element');

module.exports = Img = (function(superClass) {
  extend(Img, superClass);

  Object.defineProperty(Img.prototype, 'src', {
    get: function() {
      return this.src_;
    },
    set: function(type) {
      return this.setSrc(type);
    },
    configurable: true
  });

  function Img() {
    Img.__super__.constructor.apply(this, arguments);
    this.src = this.attr('src') || '';
    return;
  }

  Img.prototype.setSrc = function(src) {
    this.src_ = src += '';
    this.attr('src', this.src_);
  };

  Img.prototype.append = function() {
    throw Error('<img> element cannot have child nodes');
  };

  Img.prototype.prepend = function() {
    throw Error('img element cannot have children');
  };

  return Img;

})(Element);

//# sourceMappingURL=img.js.map
