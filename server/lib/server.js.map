{"version":3,"sources":["server.es6"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAGa,M,WAAA,M;AAGZ,iBAAY,IAAZ,EAAkB;AAAA;;AACjB,OAAK,EAAL,GAAU,sBAAS,IAAT,EAAe,EAAf,CAAV;AACA,OAAK,OAAL,GAAe,EAAf;AACA,OAAK,YAAL;AACA;;;;iCAGc;AACd,QAAK,EAAL,CAAQ,EAAR,CAAW,YAAX,EAAyB,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAAzB;AACA;;;+BAGY,M,EAAQ;AACpB,OAAI,eAAe,sBAAG,MAAH,CAAnB;AACA,gBAAa,EAAb,CAAgB,SAAhB,EAA2B,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,EAA0B,YAA1B,CAA3B;AACA;;;;wEAGe,M,EAAQ,O;QACnB,I,EACA,M,EACA,Q,EAGC,M;;;;;AALD,Y,GAAO,QAAQ,I;AACf,c,GAAS,QAAQ,M;AACjB,gB,GAAW,IAAI,OAAJ,CAAY,MAAZ,EAAoB,OAApB,C;;;eAGK,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,QAA3B,C;;;AAAf,c;;AACJ,iBAAS,IAAT,CAAc,MAAd;;;;;;;;AAEA,iBAAS,WAAT;;;;;;;;;;;;;;;;;;0BAKM,U,EAAY,I,EAAM,O,EAAS;AAClC,gBAAa,WAAW,WAAX,EAAb;AACA,OAAI,SAAS,KAAK,OAAL,CAAa,UAAb,CAAb;AACA,OAAI,CAAC,MAAL,EAAa;AACZ,YAAQ,KAAR,sBAAiC,UAAjC;AACA;AACA;AACD,UAAO,OAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAAP;AACA;;;yBAGM,G,EAAK;AAAA;;AACX,OAAI,OAAO,UAAI,cAAJ,CAAmB,GAAnB,CAAX;;AAEA,QAAK,OAAL,CAAa,UAAC,GAAD,EAAS;AACrB,QAAI,OAAO,IAAI,GAAJ,CAAX;AACA,QAAI,aAAa,CAAG,IAAI,IAAP,SAAe,GAAf,EAAqB,WAArB,EAAjB;AACA,UAAK,OAAL,CAAa,UAAb,IAA2B,IAAI,MAAJ,CAAW,IAAX,EAAiB,GAAjB,CAA3B;AACA,IAJD;AAKA;;;;;;IAMI,M;AAEL,iBAAY,IAAZ,EAAkB,OAAlB,EAA2B;AAAA;;AAC1B,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,OAAL,GAAe,OAAf;AACA;;;;uBAEI,I,EAAM,O,EAAS;AACnB,UAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAApB,EAA6B,IAA7B,EAAmC,OAAnC,CAAP;AACA;;;;;;IAKW,O;AAGZ,kBAAY,MAAZ,EAAoB,WAApB,EAAiC;AAAA;;AAChC,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,SAAL,GAAiB,KAAjB;AACA;;;;uBAGI,I,EAAM;AACV,OAAI,KAAK,SAAT,EAAoB;AACpB,QAAK,SAAL,GAAiB,IAAjB;AACA,QAAK,QAAL,CAAc,UAAd,EAA0B,IAA1B;AACA;;;wBAGK,O,EAAS;AACd,OAAI,KAAK,SAAT,EAAoB;AACpB,QAAK,SAAL,GAAiB,IAAjB;AACA,QAAK,QAAL,CAAc,KAAd,EAAqB,OAArB;AACA;;;8BAGW,K,EAAO;AAClB,WAAQ,KAAR,CAAc,KAAd;AACA,QAAK,KAAL,CAAW,uBAAX;AACA;;;2BAGQ,S,EAAU;AAClB,OAAI,KAAK,SAAT,EAAoB;AACpB,QAAK,QAAL,CAAc,UAAd,EAA0B,SAA1B;AACA;;;2BAGQ,I,EAAM,I,EAAM;AACpB,OAAI,YAAY,KAAK,WAAL,CAAiB,SAAjC;;AAEA,QAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,EAAuB;AACtB,eAAW,SADW;AAEtB,UAAM;AAFgB,IAAvB;AAIA;;;;;;;;;AAKF,IAAI,SAAS,IAAI,MAAJ,CAAW,iBAAO,IAAlB,CAAb;kBACe,M","file":"server.js","sourcesContent":["import {Api} from \"./list\"\r\nimport config from '../config'\r\nimport ss from 'socket.io-stream'\r\nimport socketIo from 'socket.io'\r\n\r\n\r\nexport class Server {\r\n\r\n\r\n\tconstructor(port) {\r\n\t\tthis.io = socketIo(port, {})\r\n\t\tthis.methods = {}\r\n\t\tthis.initHandlers()\r\n\t}\r\n\r\n\r\n\tinitHandlers() {\r\n\t\tthis.io.on('connection', this.onConnection.bind(this))\r\n\t}\r\n\r\n\r\n\tonConnection(socket) {\r\n\t\tlet socketStream = ss(socket)\r\n\t\tsocketStream.on('request', this.onRequest.bind(this, socketStream))\r\n\t}\r\n\r\n\r\n\tasync onRequest(socket, request) {\r\n\t\tlet data = request.data\r\n\t\tlet method = request.method\r\n\t\tlet response = new Request(socket, request)\r\n\r\n\t\ttry {\r\n\t\t\tlet result = await this.callApi(method, data, response)\r\n\t\t\tresponse.send(result)\r\n\t\t} catch (error) {\r\n\t\t\tresponse.serverError(error)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcallApi(methodName, data, request) {\r\n\t\tmethodName = methodName.toLowerCase()\r\n\t\tlet method = this.methods[methodName]\r\n\t\tif (!method) {\r\n\t\t\trequest.error(`Unknown method \"${methodName}\"`)\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn method.call(data, request)\r\n\t}\r\n\r\n\r\n\taddApi(api) {\r\n\t\tlet keys = Api.getMethodNames(api)\r\n\r\n\t\tkeys.forEach((key) => {\r\n\t\t\tlet func = api[key]\r\n\t\t\tlet methodName = `${api.name}.${key}`.toLowerCase()\r\n\t\t\tthis.methods[methodName] = new Method(func, api)\r\n\t\t})\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nclass Method {\r\n\r\n\tconstructor(func, context) {\r\n\t\tthis.func = func\r\n\t\tthis.context = context\r\n\t}\r\n\r\n\tcall(data, request) {\r\n\t\treturn this.func.call(this.context, data, request)\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport class Request {\r\n\r\n\r\n\tconstructor(socket, requestData) {\r\n\t\tthis.socket = socket\r\n\t\tthis.requestData = requestData\r\n\t\tthis.completed = false\r\n\t}\r\n\r\n\r\n\tsend(data) {\r\n\t\tif (this.completed) return\r\n\t\tthis.completed = true\r\n\t\tthis.sendData('response', data)\r\n\t}\r\n\r\n\r\n\terror(message) {\r\n\t\tif (this.completed) return\r\n\t\tthis.completed = true\r\n\t\tthis.sendData('err', message)\r\n\t}\r\n\r\n\r\n\tserverError(error) {\r\n\t\tconsole.error(error)\r\n\t\tthis.error('Internal server error')\r\n\t}\r\n\r\n\r\n\tprogress(progress) {\r\n\t\tif (this.completed) return\r\n\t\tthis.sendData('progress', progress)\r\n\t}\r\n\r\n\r\n\tsendData(type, data) {\r\n\t\tlet requestId = this.requestData.requestId\r\n\r\n\t\tthis.socket.emit(type, {\r\n\t\t\trequestId: requestId,\r\n\t\t\tdata: data\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet server = new Server(config.port)\r\nexport default server\r\n\r\n\r\n"]}