{"version":3,"sources":["user.es6"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAGqB,I;;;;;;;;;;;;;;;;QAuBf,G;;;;;AAAA,W,GAAM,gBAAM,kBAAN,CAAyB,EAAzB,C;;eACG,QAAQ,GAAR,CAAY,EAAC,KAAK,GAAN,EAAW,MAAM,IAAjB,EAAZ,C;;;;;;;;;;;;;;;;;;;;;4BAIJ,I,EAAM;AACf,UAAO,uBAAa,MAAb,CAAoB,KAAK,IAAzB,EAA+B,IAA/B,CAAP;AACA;;;;yEAtByB,O;;;;;YACpB,O;;;;;0CAAgB,I;;;;eACR,QAAQ,I;;;;;;;;;;;;;;;;;;;;;4BAII;AAAA,OAAd,KAAc,QAAd,KAAc;AAAA,OAAP,IAAO,QAAP,IAAO;;AACzB,UAAO,uBAAa,QAAb,CAAsB,IAAtB,CAAP;AACA,WAAQ,GAAR,CAAY,QAAZ,EAAsB,IAAtB;AACA,oEAAiB,EAAC,YAAD,EAAQ,UAAR,EAAjB;AACA;;;;;;;;;AAlBmB,I,CAEb,M,GAAS;AACf,QAAO,EAAC,OAAO,MAAR,EAAgB,SAAS,IAAzB,EADQ;AAEf,OAAM;AAFS,C;kBAFI,I;;IAoCR,O,WAAA,O;;;;;;;;;;;;;;;;;AAgBX,gBAAQ,GAAR,CAAY,eAAZ,EAA6B,IAA7B;;eACM,KAAK,MAAL,E;;;AACN,gBAAQ,GAAR,CAAY,gBAAZ,EAA8B,IAA9B;;eACM,KAAK,MAAL,E;;;AACN,gBAAQ,GAAR,CAAY,WAAZ,EAAyB,IAAzB;;;;;;;;;;;;;;;;;;;yEAbqB,G;QAEjB,I;;;;;YADC,G;;;;;0CAAY,I;;;;eACA,KAAK,OAAL,CAAa,EAAC,QAAD,EAAb,C;;;AAAb,Y;;AACJ,gBAAQ,GAAR,CAAY,eAAZ,EAA6B,IAA7B;0CACO,I;;;;;;;;;;;;;;;;;;;;;AAXI,O,CAEL,M,GAAS;AACf,MAAK,EAAC,OAAO,MAAR,EAAgB,SAAS,IAAzB,EADU;AAEf,OAAM;AAFS,C","file":"user.js","sourcesContent":["import passwordHash from 'password-hash'\r\nimport Model from '../core/model'\r\nimport Utils from '../core/utils'\r\n\r\n\r\nexport default class User extends Model {\r\n\r\n\tstatic schema = {\r\n\t\tlogin: {$type: String, $unique: true},\r\n\t\tpass: String,\r\n\t}\r\n\r\n\r\n\tstatic async getBySession(session) {\r\n\t\tif (!session) return null\r\n\t\treturn await session.user\r\n\t}\r\n\r\n\r\n\tstatic add({login, pass}) {\r\n\t\tpass = passwordHash.generate(pass)\r\n\t\tconsole.log('hashed', pass)\r\n\t\treturn super.add({login, pass})\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////////\r\n\tasync startSession() {\r\n\t\tlet key = Utils.createRandomString(64)\r\n\t\treturn await Session.add({key: key, user: this})\r\n\t}\r\n\r\n\r\n\tcheckPass(pass) {\r\n\t\treturn passwordHash.verify(this.pass, pass)\r\n\t}\r\n\r\n}\r\n\r\n\r\n// class Session\r\nexport class Session extends Model {\r\n\r\n\tstatic schema = {\r\n\t\tkey: {$type: String, $unique: true},\r\n\t\tuser: User,\r\n\t}\r\n\r\n\tstatic async getByKey(key) {\r\n\t\tif (!key) return null\r\n\t\tlet sess = await this.findOne({key})\r\n\t\tconsole.log('found session', sess)\r\n\t\treturn sess\r\n\t}\r\n\r\n\r\n\tasync close() {\r\n\t\tconsole.log('close session', this)\r\n\t\tawait this.remove()\r\n\t\tconsole.log('session closed', this)\r\n\t\tawait this.update()\r\n\t\tconsole.log('but in db', this)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n"]}