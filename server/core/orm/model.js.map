{"version":3,"sources":["model.es6"],"names":[],"mappings":"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","file":"model.js","sourcesContent":["import arangojs from 'arangojs'\r\nimport Schema from './schema'\r\n\r\n\r\nexport default class Model {\r\n\r\n\r\n\tstatic options = null // connection options\r\n\tstatic schema = null // user schema\r\n\r\n\tstatic _normalSchema = null\r\n\tstatic _collection = null\r\n\tstatic _database = null\r\n\r\n\r\n\tstatic _getSchema() {\r\n\t\tif (!this._normalSchema) {\r\n\t\t\tthis._normalSchema = new Schema(this.schema)\r\n\t\t}\r\n\t\treturn this._normalSchema\r\n\t}\r\n\r\n\r\n\tstatic async _getDatabase() {\r\n\t\tif (Model._database) {\r\n\t\t\treturn Model._database\r\n\t\t}\r\n\r\n\t\tlet dbName = this.options.database\r\n\t\tlet host = this.options.host || 'localhost'\r\n\t\tlet port = this.options.port || 8529\r\n\t\tlet username = this.options.username || 'root'\r\n\t\tlet password = this.options.password || ''\r\n\r\n\r\n\t\tlet db = arangojs({\r\n\t\t\turl: `http://${username}:${password}@${host}:${port}`,\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tawait db.createDatabase(dbName)\r\n\t\t} catch (e) {\r\n\t\t}\r\n\r\n\t\tdb.useDatabase(dbName)\r\n\r\n\t\tModel._database = db\r\n\t\treturn db\r\n\t}\r\n\r\n\r\n\tstatic async _getCollection() {\r\n\t\tif (this._collection) {\r\n\t\t\treturn this._collection\r\n\t\t}\r\n\r\n\t\tlet db = await this._getDatabase()\r\n\t\tlet collection = db.collection(this.name)\r\n\t\ttry {\r\n\t\t\tawait collection.create()\r\n\t\t\tawait this._setIndexes(collection)\r\n\t\t} catch (e) {\r\n\t\t}\r\n\t\treturn this._collection = collection\r\n\t}\r\n\r\n\r\n\tstatic async _setIndexes(collection) {\r\n\t\tlet schema = this._getSchema()\r\n\t\tfor (let field of schema) {\r\n\t\t\tif (!field.options.index) continue\r\n\r\n\t\t\tlet path = field.path.join('.')\r\n\t\t\tlet unique = field.options.unique\r\n\t\t\tawait collection.createHashIndex(path, {unique})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic async _call(method, ...args) {\r\n\t\ttry {\r\n\t\t\tlet collection = await this._getCollection()\r\n\t\t\tif (!collection[method]) {\r\n\t\t\t\tthrow Error(`Collection has not method '${method}'`)\r\n\t\t\t}\r\n\t\t\treturn await collection[method](...args)\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic _validate(data) {\r\n\t\tlet schema = this._getSchema()\r\n\t\tschema.validate(data)\r\n\t}\r\n\r\n\r\n\tstatic _getDocument(documentHandle) {\r\n\t\treturn this._call('document', documentHandle)\r\n\t}\r\n\r\n\r\n\tstatic _getDocuments(documentHandles) {\r\n\t\treturn this._call('lookupByKeys', documentHandles)\r\n\t}\r\n\r\n\r\n\tstatic _createModelByDocument(document) {\r\n\t\tlet model = Object.create(this.prototype)\r\n\t\tthis._documentToModel(model, document)\r\n\t\tmodel.constructor()\r\n\t\treturn model\r\n\t}\r\n\r\n\r\n\tstatic _documentToModel(model, document) {\r\n\t\tlet schema = this._getSchema()\r\n\t\tschema.documentToModel(model, document)\r\n\t\treturn model\r\n\t}\r\n\r\n\r\n\tstatic _modelToDocument(model) {\r\n\t\tlet schema = this._getSchema()\r\n\t\tlet document = {}\r\n\t\tschema.modelToDocument(model, document)\r\n\t\treturn document\r\n\t}\r\n\r\n\r\n\t/******************* public static methods *******************/\r\n\r\n\r\n\tstatic async add(data) {\r\n\t\tthis._validate(data)\r\n\t\tdata = this._modelToDocument(data)\r\n\t\tdata._removed = false\r\n\t\tlet documentHandle = await this._call('save', data)\r\n\t\tlet document = await this._call('document', documentHandle)\r\n\t\treturn this._createModelByDocument(document)\r\n\t}\r\n\r\n\r\n\tstatic async get(documentHandle) {\r\n\t\tlet document = await this._getDocument(documentHandle)\r\n\t\treturn this._createModelByDocument(document)\r\n\t}\r\n\r\n\r\n\tstatic async getArr(documentHandles) {\r\n\t\tlet documents = await this._getDocuments(documentHandles)\r\n\t\treturn documents.map(document => {\r\n\t\t\treturn this._createModelByDocument(document)\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tstatic async save(model) {\r\n\t\tthis._validate(model)\r\n\t\tlet document = this._modelToDocument(model)\r\n\t\tlet newHandle = await this._call('update', model._id, document)\r\n\t\tmodel._rev = newHandle._rev\r\n\t\treturn model\r\n\t}\r\n\r\n\r\n\tstatic async update(model) {\r\n\t\tlet document = await this._getDocument(model)\r\n\t\tthis._documentToModel(model, document)\r\n\t\treturn model\r\n\t}\r\n\r\n\r\n\tstatic async remove(model) {\r\n\t\tmodel._removed = true\r\n\t\treturn this.save(model)\r\n\t}\r\n\r\n\r\n\tstatic async restore(model) {\r\n\t\tmodel._removed = false\r\n\t\treturn this.save(model)\r\n\t}\r\n\r\n\r\n\tstatic async find(selector, skip = 0, limit = 100) {\r\n\t\tif (!selector) selector = {}\r\n\t\tlimit = Math.min(Math.max(limit, 0), 100)\r\n\t\tselector._removed = false\r\n\t\tlet cursor = await this._call('byExample', selector, {skip, limit})\r\n\t\tlet documents = await cursor.all()\r\n\t\treturn documents.map(document => {\r\n\t\t\treturn this._createModelByDocument(document)\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tstatic async findOne(selector, skip = 0) {\r\n\t\tlet models = await this.find(selector, skip, 1)\r\n\t\tlet model = models[0]\r\n\t\treturn model || null\r\n\t}\r\n\r\n\r\n\tstatic async count(selector) {\r\n\t\tlet cursor = await this._call('byExample', selector)\r\n\t\treturn cursor.count\r\n\t}\r\n\r\n\r\n\tstatic async have(selector) {\r\n\t\tlet model = await this.findOne(selector)\r\n\t\treturn !!model\r\n\t}\r\n\r\n\r\n\t/******************* public methods *******************/\r\n\r\n\r\n\tasync save() {\r\n\t\treturn this.constructor.save(this)\r\n\t}\r\n\r\n\r\n\tasync update() {\r\n\t\treturn this.constructor.update(this)\r\n\t}\r\n\r\n\r\n\tasync remove() {\r\n\t\treturn this.constructor.remove(this)\r\n\t}\r\n\r\n\r\n\tasync restore() {\r\n\t\treturn this.constructor.restore(this)\r\n\t}\r\n\r\n}\r\n\r\n"]}