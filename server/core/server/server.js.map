{"version":3,"sources":["server.es6"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import User, {Session} from '../../models/user'\r\nimport Params from './params'\r\nimport ApiError from './errors/api-error'\r\nimport Connection from './connection'\r\nimport ss from 'socket.io-stream'\r\nimport socketIo from 'socket.io'\r\nimport config from '../../config'\r\nimport cookie from 'cookie'\r\nimport API from '../api'\r\n\r\n\r\nexport default class Server {\r\n\r\n\tstatic io = null\r\n\tstatic methods = {}\r\n\r\n\r\n\tstatic api(apiName, ApiClass) {\r\n\t\tif (!(ApiClass.prototype instanceof API)) {\r\n\t\t\tthrow new Error('ApiClass must instanceof API')\r\n\t\t}\r\n\r\n\t\tlet api = new ApiClass()\r\n\r\n\t\tlet methodNames = this.getApiMethodNames(api)\r\n\t\tfor (let key of methodNames) {\r\n\t\t\tlet name = `${apiName}.${key}`.toLowerCase()\r\n\t\t\tlet method = api[key].bind(api)\r\n\t\t\tthis.methods[name] = method\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic getApiMethodNames(context) {\r\n\t\tlet methodNames = []\r\n\r\n\t\twhile (context) {\r\n\t\t\tlet keys = Object.getOwnPropertyNames(context)\r\n\t\t\tfor (let key of keys) if (key !== 'constructor') {\r\n\t\t\t\tif (methodNames.indexOf(key) !== -1) continue\r\n\t\t\t\tmethodNames.push(key)\r\n\t\t\t}\r\n\t\t\tcontext = Object.getPrototypeOf(context)\r\n\t\t}\r\n\r\n\t\treturn methodNames\r\n\t}\r\n\r\n\r\n\tstatic async callMethod(name, params, connection) {\r\n\t\tlet method = this.methods[name.toLowerCase()]\r\n\t\tif (!method) {\r\n\t\t\tthrow new ApiError(1, name)\r\n\t\t}\r\n\t\tlet paramsStorage = new Params(params, connection)\r\n\t\treturn method(paramsStorage, connection)\r\n\t}\r\n\r\n\r\n\tstatic async connect() {\r\n\t\tthis.io = socketIo(config.port, {})\r\n\t\tthis.io.on('connection', socket => this.onConnection(socket))\r\n\t}\r\n\r\n\r\n\tstatic async getSession(cookies) {\r\n\t\tlet sessionKey = cookies['session-key']\r\n\t\treturn await Session.getByKey(sessionKey)\r\n\t}\r\n\r\n\r\n\tstatic getCookies(socket) {\r\n\t\tlet cookiesString = socket.sio.conn.request.headers.cookie\r\n\t\tlet cookies = cookie.parse(cookiesString)\r\n\t\treturn cookies\r\n\t}\r\n\r\n\r\n\tstatic getHeaders(socket) {\r\n\t\tlet headers = socket.sio.conn.request.headers\r\n\t\treturn headers\r\n\t}\r\n\r\n\r\n\tstatic async onConnection(socket) {\r\n\t\tsocket = ss(socket)\r\n\t\tlet cookies = this.getCookies(socket)\r\n\t\tlet session = await this.getSession(cookies)\r\n\t\tlet user = await User.getBySession(session)\r\n\t\tlet headers = this.getHeaders(socket)\r\n\r\n\t\tlet connection = new Connection(this, socket, user, session, headers, cookies)\r\n\t}\r\n\r\n}\r\n\r\n\r\n"]}