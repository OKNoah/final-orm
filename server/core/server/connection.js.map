{"version":3,"sources":["connection.es6"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAGqB,U;AAGpB,qBAAY,MAAZ,EAAoB,MAApB,EAA4B,IAA5B,EAAkC,OAAlC,EAA2C,OAA3C,EAAoD,OAApD,EAA6D;AAAA;;AAC5D,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,YAAL;AACA;;;;iCAGc;AAAA;;AACd,QAAK,MAAL,CAAY,EAAZ,CAAe,SAAf,EAA0B;AAAA,WAAW,MAAK,SAAL,CAAe,OAAf,CAAX;AAAA,IAA1B;AACA;;;;wEAGa,I,EAAM,O;;;;;;eACb,KAAK,UAAL,E;;;AACN,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,OAAL,GAAe,OAAf;;;;;;;;;;;;;;;;;;;;;;;;aAKI,KAAK,O;;;;;;eACF,KAAK,OAAL,CAAa,KAAb,E;;;AAEP,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,OAAL,GAAe,IAAf;;;;;;;;;;;;;;;;;;;yEAIe,O;;;QACX,K,EACA,E,kFAEK,I,EACL,S;;;;;;AAJA,a,GAAQ,QAAQ,K;AAChB,U,GAAK,QAAQ,E;;AACjB,gBAAQ,MAAM,GAAN,CAAU;AAAA,gBAAW,2BAAe,OAAf,CAAX;AAAA,SAAV,CAAR;;;;;oBACiB,K;;;;;;;;AAAR,Y;;eAAqB,KAAK,GAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC1B,iB,GAAY,MAAM,GAAN,CAAU;AAAA,gBAAQ,KAAK,MAAL,EAAR;AAAA,SAAV,C;;AAChB,aAAK,YAAL,CAAkB,SAAlB,EAA6B,EAA7B;;;;;;;;;;;;;;;;;;+BAIY,S,EAAW,E,EAAI;AAC3B,QAAK,MAAL,CAAY,IAAZ,CAAiB,UAAjB,EAA6B;AAC5B,eAAW,SADiB;AAE5B,QAAI;AAFwB,IAA7B;AAIA;;;wBAGK,I,EAAM,O,EAAS;AACpB,SAAM,uBAAa,IAAb,EAAmB,OAAnB,CAAN;AACA;;;;;;kBAvDmB,U","file":"connection.js","sourcesContent":["import ApiError from './errors/api-error'\r\nimport Task from './task'\r\n\r\n\r\nexport default class Connection {\r\n\r\n\r\n\tconstructor(server, socket, user, session, headers, cookies) {\r\n\t\tthis.session = session\r\n\t\tthis.cookies = cookies\r\n\t\tthis.headers = headers\r\n\t\tthis.server = server\r\n\t\tthis.socket = socket\r\n\t\tthis.user = user\r\n\t\tthis.initHandlers()\r\n\t}\r\n\r\n\r\n\tinitHandlers() {\r\n\t\tthis.socket.on('request', request => this.onRequest(request))\r\n\t}\r\n\r\n\r\n\tasync setUser(user, session) {\r\n\t\tawait this.logoutUser()\r\n\t\tthis.user = user\r\n\t\tthis.session = session\r\n\t}\r\n\r\n\r\n\tasync logoutUser() {\r\n\t\tif (this.session) {\r\n\t\t\tawait this.session.close()\r\n\t\t}\r\n\t\tthis.user = null\r\n\t\tthis.session = null\r\n\t}\r\n\r\n\r\n\tasync onRequest(request) {\r\n\t\tlet tasks = request.tasks\r\n\t\tlet id = request.id\r\n\t\ttasks = tasks.map(options => new Task(this, options))\r\n\t\tfor (let task of tasks) await task.run()\r\n\t\tlet responses = tasks.map(task => task.toJSON())\r\n\t\tthis.sendResponse(responses, id)\r\n\t}\r\n\r\n\r\n\tsendResponse(responses, id) {\r\n\t\tthis.socket.emit('response', {\r\n\t\t\tresponses: responses,\r\n\t\t\tid: id\r\n\t\t})\r\n\t}\r\n\r\n\r\n\terror(code, message) {\r\n\t\tthrow new ApiError(code, message)\r\n\t}\r\n\r\n}\r\n\r\n"]}