{"version":3,"sources":["connection.es6"],"names":[],"mappings":"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","file":"connection.js","sourcesContent":["import ss from 'socket.io-stream'\r\nimport User from '../models/user'\r\nimport socketIo from 'socket.io'\r\nimport config from '../config'\r\nimport cookie from 'cookie'\r\n\r\n\r\nexport default class Server {\r\n\r\n\tstatic io = null\r\n\tstatic methods = {}\r\n\r\n\r\n\tstatic addMethods(prefix, obj) {\r\n\t\tfor (let key in obj) if (obj.hasOwnProperty(key)) {\r\n\t\t\tlet method = obj[key]\r\n\t\t\tlet name = `${prefix}.${key}`\r\n\t\t\tthis.addMethod(name, method)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic addMethod(name, method) {\r\n\t\tthis.methods[name.toLowerCase()] = method\r\n\t}\r\n\r\n\r\n\tstatic async callMethod(name, args, context) {\r\n\t\tlet method = this.methods[name.toLowerCase()]\r\n\t\tif (!method) {\r\n\t\t\tthrow Error(`Нет такого метода '${name}'`)\r\n\t\t}\r\n\t\treturn method.call(context, ...args)\r\n\t}\r\n\r\n\r\n\tstatic async connect() {\r\n\t\tthis.io = socketIo(config.port, {})\r\n\t\tthis.io.on('connection', socket => this.onConnection(socket))\r\n\t}\r\n\r\n\r\n\tstatic async onConnection(socket) {\r\n\t\tsocket = ss(socket)\r\n\t\tlet user = await this.getUser(socket)\r\n\t\tlet connection = new Connection(socket, user)\r\n\t}\r\n\r\n\r\n\tstatic async getUser(socket) {\r\n\t\tlet cookiesString = socket.sio.conn.request.headers.cookie\r\n\t\tlet cookies = cookie.parse(cookiesString)\r\n\t\tlet sessionKey = cookies['session-key']\r\n\t\treturn await User.getBySessionKey(sessionKey)\r\n\t}\r\n\r\n}\r\n\r\n// init server\r\nServer.connect()\r\n\r\n\r\nclass Connection {\r\n\r\n\r\n\tconstructor(server, socket, user) {\r\n\t\tthis.server = server\r\n\t\tthis.socket = socket\r\n\t\tthis.user = user\r\n\t\tthis.initHandlers()\r\n\t}\r\n\r\n\r\n\tinitHandlers() {\r\n\t\tthis.socket.on('request', request => this.onRequest(request))\r\n\t}\r\n\r\n\r\n\tasync onRequest(request) {\r\n\t\tlet tasks = request.tasks\r\n\t\tlet id = request.id\r\n\t\ttasks = tasks.map(options => new Task(this, options))\r\n\t\tfor (let task of tasks) await task.run()\r\n\t\tlet responses = tasks.map(task => task.toJSON())\r\n\t\tthis.sendResponse(responses, id)\r\n\t}\r\n\r\n\r\n\tsendResponse(responses, id) {\r\n\t\tthis.socket.emit('response', {\r\n\t\t\tresponses: responses,\r\n\t\t\tid: id\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n\r\nclass Task {\r\n\r\n\tconstructor(connection, options) {\r\n\t\tthis.connection = connection\r\n\t\tthis.method = options.method\r\n\t\tthis.args = options.args\r\n\r\n\t\tthis.done = false\r\n\t\tthis.error = null\r\n\t\tthis.result = null\r\n\t}\r\n\r\n\r\n\tresolve(result) {\r\n\t\tif (this.done) return\r\n\t\tthis.result = result\r\n\t\tthis.done = true\r\n\t}\r\n\r\n\r\n\treject(error) {\r\n\t\tif (this.done) return\r\n\t\tthis.error = error\r\n\t\tthis.done = true\r\n\t}\r\n\r\n\r\n\tasync run() {\r\n\t\ttry {\r\n\t\t\tvar result = await Connection.callMethod(this.method, this.args, this)\r\n\t\t} catch (error) {\r\n\t\t\tthis.reject(error)\r\n\t\t}\r\n\t\tthis.resolve(result)\r\n\t}\r\n\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\terror: this.error,\r\n\t\t\tresult: this.result\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}